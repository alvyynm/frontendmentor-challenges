{"ast":null,"code":"var _jsxFileName = \"/Users/alvin/Desktop/Projects/frontendmentor-challenges/12-rest-countries-api/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport CountryInfo from \"./components/CountryInfo\";\nimport CountryList from \"./components/CountryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [countryList, setCountryList] = useState([]);\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [error, setError] = useState(null);\n  // const [getCountryName, setGetCountryName] = useState(\"\");\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"https://restcountries.com/v3.1/all\")\n  //     .then((response) => {\n  //       setCountryList(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error.message);\n  //       setError(error);\n  //     });\n  // }, []);\n\n  // // Filter results based on continent\n  // const filterFunction = countryList.filter((country) => {\n  //   return searchTerm.toLowerCase() === \"\"\n  //     ? country\n  //     : country.continents.includes(searchTerm);\n  // });\n\n  // const africabtn = document.querySelector(\".africa\");\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CountryList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Routes","Route","CountryInfo","CountryList","App"],"sources":["/Users/alvin/Desktop/Projects/frontendmentor-challenges/12-rest-countries-api/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport CountryInfo from \"./components/CountryInfo\";\nimport CountryList from \"./components/CountryList\";\n\nfunction App() {\n  // const [countryList, setCountryList] = useState([]);\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [error, setError] = useState(null);\n  // const [getCountryName, setGetCountryName] = useState(\"\");\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"https://restcountries.com/v3.1/all\")\n  //     .then((response) => {\n  //       setCountryList(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error.message);\n  //       setError(error);\n  //     });\n  // }, []);\n\n  // // Filter results based on continent\n  // const filterFunction = countryList.filter((country) => {\n  //   return searchTerm.toLowerCase() === \"\"\n  //     ? country\n  //     : country.continents.includes(searchTerm);\n  // });\n\n  // const africabtn = document.querySelector(\".africa\");\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<CountryList />} />\n        {/* <Route\n          path=\"/country/:countryId\"\n          element={<CountryInfo countryName={getCountryName} />}\n        /> */}\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAE/D,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,SAASC,GAAG,GAAG;EACb;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,MAAM;MAAA,uBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAKrC;IAAA;IAAA;IAAA;EAAA,QACK;AAEpB;AAAC,KAtCQA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}